#!/bin/awk -f

function to_sec(date,    t) {
  split(date, t, /:/);
  return((t[1]*3600) + (t[2]*60) + t[3]);
}

function to_hr(sec,    m, s) {
  s = sec % 60;
  sec = int(sec / 60);
  m = sec % 60;
  sec = int(sec / 60);

  return(sprintf("%02d:%02d:%02d", sec, m, s));
}

BEGIN {
  FS = "[(]|%[)][[:blank:]]*$";
}

/^\[([0-9]{2}:){2}[0-9]{2}\]/ {
  split($0, t, /[][]/);
  cur = to_sec(t[2]);
  if (cur < lastcur) {
    day++;
    mod = day * 24 * 60 * 60;
  }
  lastcur = cur;
  time = cur + mod;
}

NF != 3 {
  next;
}

!$2 {
  wu++;
}

{
  wu = wu ? wu : 1;
  if (!(wu in start)) {
    start[wu] = $2;
    startt[wu] = time;
  }
  if ($2 == 100) {
    end[wu] = last;
    endt[wu] = time;
  }

  steps[wu,$2] = $0;
  times[wu,$2] = time;

  last = $2;
}

END {
  if (FILENAME != "-") {
    cmd = "stat -c %Y '" FILENAME "'";
    cmd | getline mtime;
    close(cmd);

    mod = (systime() - mtime);
    time = time + mod;
  }

  if (NF == 3) {
    end[wu] = last;

    for (i=start[wu]+1; i<=last; i++) {
      tot += times[wu,i] - times[wu,i-1];
    }

    printf("\nThis WU:\n");
    printf("%30s: %02d%%\n", "Current Progress", last);

    if (last > 0) {
      avg = int(tot/last);
    } else {
      avg = time - startt[wu];
    }
    printf("%30s: %s\n", "AVG time per percent", to_hr(avg));

    diff = time - startt[wu];
    printf("%30s: %s\n", "Time spent on current WU", to_hr(diff));

    rem = 100 - last;
    printf("%30s: %s\n", "ETA to completion", to_hr((avg*rem)-mod));

    fin = endt[wu-1];
  } else {
    fin = endt[wu];
    printf("No WU currently in progress\n");
  }
  printf("\n");

  if (wu > 1) {
    perc = ftot = wtot = wus = 0;

    for (i=1; i<=wu; i++) {
      if (!end[i]) {
        continue;
      }
      tot = 0;

      for (j=start[i]+1; j<=end[i]; j++) {
        tot += times[i,j] - times[i,j-1];
        perc++;
      }

      wuperc = (end[i] - start[i]) / 100;
      wtot += int(tot*(1/wuperc));
      ftot += tot;
      wus++;
    }

    printf("\nAll WUs in the log:\n");

    avg = int(ftot/perc);
    printf("%30s: %s\n", "AVG time per percent", to_hr(avg));

    avg = int(wtot/wus);
    printf("%30s: %s\n", "AVG time to complete WU", to_hr(avg));

    diff = time - fin;
    printf("%30s: %s\n", "Time since last completed WU", to_hr(diff));
  } else {
    printf("No previous WUs in the log\n");
  }
  printf("\n");
}
